@startuml

actor "Kid" as kid
participant "//<<Boundary>>//\n**QueueUI**" as Queue
participant "//<<Control>>//\n**WebCommunicationManagement**" as WebPortal
participant "//<<Control>>//\n**CarCommunicationManagement**" as RoboticCarManagement
participant "//<<Control>>//\n**MovementManagement**" as B
participant "//<<Entity>>//\n**Motor**" as C
actor "RoboticCar" as RC 
kid -> Queue : Submit stop command
activate Queue #FFBBBB
Queue -> WebPortal : sendStop()
activate WebPortal #FFBBBB
WebPortal -> RoboticCarManagement : sendStopCommand()
activate RoboticCarManagement #FFBBBB
RoboticCarManagement -> B : receiveStopCommand()
activate B #FFBBBB
B-> C : stop()
activate C #FFBBBB
C -> RC : "Car stop successfully"
C --> B : Success()
deactivate C
B --> RoboticCarManagement: Success()
deactivate B
RoboticCarManagement --> WebPortal: Success()
deactivate RoboticCarManagement
WebPortal --> Queue: Success()
deactivate WebPortal
Queue -> kid : "Stop command executed successfully"
deactivate Queue
@enduml